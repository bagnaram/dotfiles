#+TITLE: dotfiles
These are my dotfiles, or in other words, a collection of configuration for
various applications. All stored in a single repository. The idea is you clone a
single repo, and can install the configuration using various make targets.

[[desktop.jpg]]

* Requirements
I am using the following configuration:

It is required to install these packages using your distribution's package
manager.

It is also required to install [[https://git-scm.com/][git]] and [[https://www.gnu.org/software/make/][GNU make]] through your distribution if
they are not already available on your system.

** [[https://codeberg.org/dnkl/foot/][foot]]
A minimalist terminal emulator using damage tracking
** Pipewire
wlroots support for WebRTC
** emacs
doom-emacs
** sway
Wayland wlroots based compositor
** [[https://codeberg.org/dnkl/fnott][fnott]]
Keyboard driven and lightweight Wayland notification daemon for wlroots-based compositors.
** [[https://codeberg.org/dnkl/fuzzel][fuzzel]]
Application launcher for wlroots based Wayland compositors, similar to rofi's `drun` mode.
** [[https://github.com/emersion/kanshi][kanshi]]
Monitor hotplugging in Wayland
** [[https://codeberg.org/dnkl/yambar][yambar]]
Modular status panel for X11 and Wayland, inspired by https://github.com/jaagr/polybar
** [[https://gitlab.com/chinstrap/gammastep][gammastep]]
A wlroots based color-temperature adjuster

* Installation
1. Clone this repository
   #+BEGIN_SRC sh :results verbatim :exports both
   git clone https://github.com/bagnaram/dotfiles.git
   #+END_SRC
2. Enter the cloned directory and pull each of the sub-modules
   #+BEGIN_SRC sh :results verbatim :exports both
   git submodule update --init --recursive
   #+END_SRC
   #+RESULTS:
   : Submodule path 'mutt/dracula': checked out '6a521416618ffb677157f56e61a7bc3d7cef4d03'
   : Submodule path 'vim/bundle/Dockerfile': checked out 'bf29af1c79df21aefd3f68660cc8c57a78f14021'
   : Submodule path 'vim/bundle/ctrlp': checked out '2e773fd8c7548526853fff6ee2e642eafbbe3d04'
   : Submodule path 'vim/bundle/tabular': checked out '339091ac4dd1f17e225fe7d57b48aff55f99b23a'
   : Submodule path 'vim/pathogen': checked out 'e9fb0914dba5bdfe2feaa364dda2e9495c5620a2'
   : Submodule path 'zsh': checked out '32338fd40cae45c775dadc34ae05476811a3834b'
3. You can either install all of the configurations specified in this dotfiles
   repo or specific ones you wish to use. It will create symlinks to all the
   configuration files within the dotfiles subdirectories.
   #+BEGIN_SRC sh :results verbatim :exports both
   make all
   #+END_SRC
   NOTE: you can also specify individual dotfiles using:
   #+BEGIN_SRC sh :results verbatim :exports both
   make mutt
   make vim
   #+END_SRC
* To Customize:
Simply modify the files within the ~dotfiles~ directory
* GPG SSH subkeys
I use the GPG subkeys to provide SSH access to my environment. This is ideal
because the private keys exist on my Yubikey and not anywhere else. To configure
OpenSSH, run:

1. Setup GPG agent to enable SSH access
   #+BEGIN_SRC sh :results verbatim :exports both
   make gpg-agent
   #+END_SRC

2. Configure sshcontrol
   #+BEGIN_SRC sh :results verbatim :exports both
   echo 'scd learn --force' | gpg-connect-agent
   #+END_SRC
   Each line of output contains the keygrip for one of the three keys on your
   OpenPGP card: The encryption key, the signing key, and the authentication key
   (which is the one we want). The third line, for “OPENPGP.3”, contains the
   keygrip for the authentication key.

   Use the 3rd line and add it to the ~/.gnupg/sshcontrol~ file
* Un-installation
There is a `make` target to uninstall the dotfile configuration. ~Warning: This
removes each of the symlinks that get created by this tool~
